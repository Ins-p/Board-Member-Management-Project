<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="src.com.PFweb.BoardDAO">
	
	<!-- 게시판 글 목록 구하는 where절을 sql 태그 안에 선언하기 -->
	<sql id="boardWhere">
	
		<!-- 만약 키워드가 null이 아니고 길이가 0보다 크면 where 절에 참여하기 -->
		<if test="keyword1 != null and keyword1.length()>0">	
			and(
				upper(subject) like upper('%${keyword1}%') or
				upper(content) like upper('%${keyword1}%') or
				upper(email) like upper('%${keyword1}%') or
				upper(writer) like upper('%${keyword1}%')or
				to_char(reg_date, 'YYYY-MM-DD') like upper('%${keyword1}%')
			)
		</if>

		<if test="date != null and date.length > 0">
			and
			<foreach collection="date" item="date" open="(" separator="or" close=")">
			
				<!-- 만약 BoardSearchDTO 객체의 속성변수 date에 문자열 "오늘"이 저장되어 있으면 -->
				<if test="date.equals('오늘')">
					to_char(sysdate, 'YYYYMMDD') = to_char(reg_date, 'YYYYMMDD')
				</if>
				
				<!-- 만약 BoardSearchDTO 객체의 속성변수 date에 문자열 "어제"가 저장되어 있으면 -->
				<if test="date.equals('어제')">
					to_char(sysdate - 1, 'YYYYMMDD') = to_char(reg_date, 'YYYYMMDD')
				</if>
			
			</foreach>
		</if>
	</sql>
	
	<!-- 게시판 글 insert -->
	<insert id='insertBoard' parameterType="src.com.PFweb.BoardDTO">
		insert into board(
			b_no
			,subject
			,writer
			,readcount
			,content
			,pwd
			,group_no
			,print_no
			,print_level
		) values (
			(select nvl(max(b_no),0)+1 from board)
			,#{subject}		
			,#{writer}		
			,0
			,#{content}		
			,#{pwd}				
			
			<!-- 만약에 자바 boardDTO객체의 속성변수가 b_no가 0보다 크면 새글쓰기 모드 -->
			<if test="b_no ==0">
			,(select nvl(max(b_no),0)+1 from board)		
			,0											
			,0
			</if>	
			
			<!-- 만약에 자바 boardDTO객체의 속성변수가 b_no가 0보다 크면 댓글쓰기 모드 -->
			<!-- 그룹번호를 부모PK번호로, 출력순서 번호와 들여쓰기 레벨은 부모보다 1더 큰 값으로 입력 -->
			<if test="b_no > 0">
			,(select group_no from board where b_no = #{b_no})		
			,(select print_no + 1 from board where b_no = #{b_no})										
			,(select print_level +1 from board where b_no = #{b_no})
			</if>											
		)		
	</insert>
	
	<!-- 게시판의 내용(Content) 구현 쿼리 -->
	<!-- 페이징 처리 - 시작행 : 선택한 페이지번호 x 보여지는 행 개수 - 보여지는 행 개수 + 1 -->
	<!-- 페이징 처리 - 마지막행 : 선택한 페이지번호 x 보여지는 행 개수 -->
	<select id = "getBoardList" parameterType="src.com.PFweb.BoardSearchDTO" resultType="java.util.HashMap" >
	    select ee.*
		from(
		    select e.*, rownum||'' "RNUM"
		    from(
			       select 
						b_no||''        					"b_no",
						subject								"subject",
						writer								"writer",
						readcount||''						"readcount",
						to_char(reg_date, 'YYYY-MM-DD')||''	"reg_date",
						print_no||''						"print_no",
						print_level||''						"print_level"
					from board
					where 1=1
					<include refid="boardWhere"/>
					<if test ="orderby==null or orderby.length()==0">
			        	order by group_no desc, print_no asc
			        </if>
			        
			        <if test ="orderby!=null and orderby.length()>0">
			        <!-- 최신글은 desc -->
			        	order by ${orderby}, reg_date desc
			        </if>
			        
			      <!-- 최신글은 desc -->
				<![CDATA[
				) e where rownum <= ${selectPageNo * rowCntPerPage} 
				order by rownum asc
			)ee
		where RNUM >= ${selectPageNo * rowCntPerPage - rowCntPerPage + 1} 
		]]> 
	</select>
	
	<!-- 검색한 게시판 목록 총개수 리턴하는 쿼리 -->
	<select id='getBoardListAllCnt' parameterType="src.com.PFweb.BoardSearchDTO" resultType="int">
		select count(*) 
		from board
		where 1=1 
		<include refid="boardWhere"/>
	</select>
	
	<!-- 게시판의 내용(Content) 구현 쿼리 -->
	<select id = "getBoard" parameterType="int" resultType="src.com.PFweb.BoardDTO">
		select
			b_no             "b_no",
			writer          "writer",
			subject	          "subject",		
			reg_date          "reg_date",
			readcount          "readcount",
			content          "content",
			pwd          "pwd",
			email          "email",
			group_no          "group_no",
			print_no          "print_no",
			print_level          "print_level"
		from board
		where b_no = #{b_no}	
	</select>
	
	<!-- 게시판을 수정하여 값을 리턴하는 쿼리 -->
	<update id ="updateReadcount" parameterType="int">
		update board set readcount = readcount + 1
		where b_no = #{b_no}
	</update>
	
	<!-- 기존 작성된 게시판에 댓글이 생성이 될 경우 댓글에 출력번호를 update하는 쿼리 -->
	<update id ="updatePrintNo" parameterType="src.com.PFweb.BoardDTO">
		update board set print_no = print_no + 1
		where group_no = (select group_no from board where b_no = #{b_no})
			and print_no > (select print_no from board where b_no = #{b_no})
	</update>
	
	<!-- 작성된 글을 수정 및 삭제하기 전 글이 여전히 존재하는지 확인하는 쿼리 -->
	<select id ='getBoardCnt' parameterType="src.com.PFweb.BoardDTO" resultType="int">
		select count(*) from board where b_no = #{b_no}
	</select>
	
	<!-- 작성된 글을 수정 및 삭제하기 전 입력한 글의 비밀번호를 확인하는 쿼리 -->
	<select id ='getPwdCnt' parameterType="src.com.PFweb.BoardDTO" resultType="int">
		select count(*) from board where b_no = #{b_no} and pwd = #{pwd}
	</select>
	
	<!-- 게시판을 수정하여 값을 리턴하는 쿼리 -->
	<update id ='updateBoard' parameterType="src.com.PFweb.BoardDTO">
		update board
		set 
			subject = #{subject},
			content = #{content}
		where
			b_no = #{b_no} and pwd = #{pwd}
	</update>
	
	<!-- 삭제할 게시판의 자식글 존재 개수를 얻는 쿼리  -->
	<select id ='getChildrenCnt' parameterType="src.com.PFweb.BoardDTO" resultType="int">
		select count(*) from board 
		where 
		group_no = (select group_no from board where b_no = #{b_no})
		and print_no = (select print_no +1 from board where b_no = #{b_no})
		and print_level = (select print_level +1 from board where b_no = #{b_no})
	</select>
	
	<!-- 삭제될 게시판 이후 글의 출력 순서번호를 1씩 감소 시키는 쿼리 -->
	<update id="downPrintNo" parameterType="src.com.PFweb.BoardDTO">
		update board set print_no = print_no - 1
		where group_no = (select group_no from board where b_no = #{b_no})
		and print_no > (select print_no from board where b_no = #{b_no})
	</update>
	
	<!-- 게시판 삭제 명령한 후 삭제 적용행의 개수를 얻는 쿼리 -->
	<delete id="deleteCnt" parameterType="src.com.PFweb.BoardDTO">
		delete from board where b_no = #{b_no} and pwd = #{pwd} and writer = #{writer}
	</delete>
	
	<!-- 댓글을 쓸 때 기존 작성된 글의 제목을 그대로 가져오는 쿼리 -->
	<select id ="getRegInfo" parameterType="int" resultType="src.com.PFweb.BoardDTO">
		select 
			writer "writer",
			subject "subject",
			email "email"
		from board
		where b_no = #{b_no}
	</select>
	

	
	
	
	
</mapper>